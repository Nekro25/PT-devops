version: "3"


services:
  bot:
    build: ./bot
    image: bot_image
    container_name: bot
    depends_on:
      - db
    env_file:
      - '.env'
    ports:
      - '5050:5050'


  db:
    build:
      context: ./db
      args:
        DB_USER: ${DB_USER}
        DB_REPL_USER: ${DB_REPL_USER}
        DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
        DB_PASSWORD: ${DB_PASSWORD}
    image: db_image
    hostname: ${DB_HOST}
    container_name: db
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "listen_addresses=*"
      - "-c"
      - "log_replication_commands=on"
      - "-c"
      - "archive_mode=on"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "wal_level=replica"
      - "-c"
      - "wal_log_hints=on"
      - "-c"
      - "password_encryption=md5"
    restart: always
    environment:
      POSTGRES_HOST_AUTH_METHOD: md5
    env_file:
      - '.env'
    ports:
      - ${DB_PORT}


  db_repl:
    build: ./db_repl
    environment:
      DB_HOST: ${DB_HOST}
      DB_REPL_USER: ${DB_REPL_USER}
      DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
    image: db_repl_image
    container_name: ${DB_REPL_HOST}
    env_file:
      - '.env'
    depends_on:
      - db
    restart: always
    ports:
      -  ${DB_REPL_PORT}
    user: postgres
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/*
      #export PGPASSWORD=$PGPASSWORD
      until pg_basebackup -h ${DB_HOST} -D /var/lib/postgresql/data -U ${DB_REPL_USER} --slot=replication_slot -P -R
      do
      echo 'primary connecting...'
      sleep 1s
      done;
      echo 'backup done'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
